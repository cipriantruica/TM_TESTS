From: dawagner@phoenix.Princeton.EDU (David A. Wagner) Subject: Re: viewing postscript files under X windows  In article  kin@isi.com (Kin Cho) writes: > >I can also live with a utility that converts postscript to plain >text, perferably retaining page counts so that I know how many pages >the original document contains. >  \tWell, I know of one hack to sort of do this conversion.  First get ghostscript and check out the gs_2asc.ps file that comes with it. It prints out some information about where each text string goes on the page, and maintains page counts.  i have written a little C program to massage the output of gs -dNODISPLAY gs_2asc.ps somewhat, so that you can get all the ascii strings in the document.  No guarantees that it will not break up words/sentences, though - i have used it with varying degrees of success.  Anyways, try this out, it may do what you want.  /*  * massager: a filter for use with gs; does crude Postscript->ASCII conversion  *  * Usage:  *\tcat file.ps | gs -dNODISPLAY gs_2asc.ps - | massager  *  * I print a  after each new page.  *  * Put the following source into massager.c and compile it:  */         main() { \tchar\tline[1000], *p;  \twhile (fgets(line, sizeof(line), stdin) != NULL) \t\tif (line[0] == \'P\') \t\t\tprintf(  f n ); \t\telse if (line[0] == \'S\' && line[1] == \' \') { \t\t\tif ((p = strrchr(line, \')\')) == NULL) \t\t\t\tcontinue; \t\t\t*p = \' 0\'; \t\t\tif ((p = strchr(line, \'(\')) == NULL) \t\t\t\tcontinue; \t\t\tfor (p++; *p; p++) \t\t\t\tif (*p != \'  \' || (p[1] != \')\' && p[1] != \'(\')) \t\t\t\t\tputchar(*p); \t\t\tputchar(\' n\'); \t\t}  \treturn(0); }  -------------------------------------------------------------------------------- David Wagner                                              dawagner@princeton.edu 