From: yuki@is.s.u-tokyo.ac.jp (ITO Takayuki) Subject: Re: What does the .bmp format mean?  In article   \trobertsa@unix2.tcd.ie (Andrew L. Roberts) writes:  >What exactly does the windows bitmap format look like? I mean, how is >the data stored: width, height, no. of colours, bitmap data? I could not >find anything in ths user manual, is there any other reference material >which would give me this information?  From: thomas@sunshine.Kodak.COM (Thomas Kinsman) Newsgroups: comp.os.ms-windows.programmer.misc,alt.binaries.pictures.utilities Subject: DIB/BMP CREATION GUIDE, as requested. Keywords: DIB BMP Bitmaps File Formats Message-ID:  Date: 23 Dec 92 21:44:32 GMT Sender: news@kodak.kodak.com Organization: Precambiran Electronics, Rochester, NY Lines: 484 Xref: cradle.titech comp.os.ms-windows.programmer.misc:3609         \t\t\t   GUIDE TO CREATION OF DIB IMAGES   \t\t\t\t  Thomas B. Kinsman  \t\t\t       Precambrian Electronics \t\t\t\t   29 Falstaff Rd. \t\t\t\t Rochester, NY 14609 \t\t\t\t  thomask@kodak.com \t\t\t       Copyright March 15, 1991    \t\t\t\t\t ABSTRACT  \t      The format of images created for use by  MS  Windows  3.0/3.1 \t      applications  is\tdocumented  in\tthe MS Windows Programmer is \t      Reference guide.\tThis guide is intended as a  clearify  some \t      wording\tof   the   specifications,   and  to  put  forth  a \t      recommendation among the various alternatives.  \t      Please send updates/corrections/suggestions and revisions\t to \t      me.   Please  thank  me  for  writing  this on my own time by \t      keeping my name  with  the  document.   Thank  you  for  your \t      respect.  \t      This document Copyright, 1991, by Thomas B. Kinsman. \t      If  desired,  a  PostScript  version  of\tthis  document\t is \t      available.  \t      This information is free.\t You get more than what you pay for. \t      do not sue me if i am wrong.       OVERVIEW      The DIB image file format is intended to be a  Device Independent  Bitmap      file  format.  (What Microsoft means by  Device Independent  is unclear to     me.) Four pixel resolutions are supported: 1 bit, 4 bit, 8 bit, and 24 bit     pixels.      These images were intended for use on DOS (IBM, or Little-Endian) systems.     If\tyou  are  creating them on another architecture you will have to byte-     swap all short and long integer values.      By convention, DIB images end in the extension  .BMP .   This  is  because    \t\t\t      March 15, 1991      \t\t\t\t    - 2 -       they  are  a  super-set of earlier  bitmap image files .  Consequently you     will sometimes hear DIB files referred to as  BMP  files.      Since DIB images files are a super-set, there are three  flavors   of  DIB     images: \t o   DOS DIB images.  These are the recommended\t convention,  and  the \t     form  which I will describe how to create.\t They are intended for \t     applications running under MS Windows /3.0 in a DOS environment. \t o   OS/2 DIB images.  My understanding is that these are  the\tflavor \t     of DIB images that were used by the Presentation Manager. \t o   Old-style Bitmap images.                                         \t\t\t      March 15, 1991      \t\t\t\t    - 3 -       DIFFERENCES BETWEEN FLAVORS      The DOS DIB images consist of: \t 1.  A  BITMAPFILEHEADER  file header which identifies the file\t as  a \t     DIB  file.\t  This\theader\talso gives the total size of the image \t     file, and the offset to the image data. \t 2.  A  BITMAPINFOHEADER   image  header  which\t specifies  the\t image \t     attributes. \t 3.  An optional palette of colors used by the image.  If  it  exists, \t     this  may contain 2, 16, or 256 entries.  Each entry is a Windows \t     RGBQUAD structure. \t 4.  The image data itself.       The OS/2 DIB images consist of: \t 1.  The same  BITMAPFILEHEADER  file header which identifies the file \t     as\t a  DIB\t file.\t This  header also gives the total size of the \t     image file, and the offset to the image data. \t 2.  A  BITMAPCOREHEADER   image  header  which\t specifies  the\t image \t     attributes. \t 3.  An optional palette of colors used by the image.  Again, if  this \t     exists  it\t may  contain  2, 16, or 256 entries.  Each entry is a \t     Windows RGBTRIPLE structure. \t 4.  The image data itself.       The Old Style image bitmap consists of: \t 1.  Either a BITMAPINFOHEADER or a  BITMAPCOREHEADER.\t Which\theader \t     type is determined by the first long integer (DWORD) value. \t 2.  An optional color palette.\t  This\tpalette\t may  be  composed  of \t     either   Windows\tRGBQUAD\t  structures  (if  the\theader\twas  a \t     BITMAPINFOHEADER) or Windows RGBTRIPLE structures (if the\theader \t     was a BITMAPCOREHEADER). \t 3.  The image data itself.       CREATING DIB IMAGE FILES.      Creating a DOS DIB image file consists of several straight forward\tsteps.     The headers need to be created and then written to the file.  These header     structures are defined in the MS  Windows/3.0   windows.h \tinclude\t file.     Palette  information  needs\t to  be\t stored for images that are not 24-bit     images.  The five general steps are: \t 1.  Filling  in  the  BITMAPFILEHEADER\t  and\tthe   BITMAPINFOHEADER \t     structures the basic image information. \t 2.  If the image is a 1-bit, 4-bit, or an 8-bit image,\t creating  the \t     color palette of RGBQUADS. \t 3.  Calculating the total file size and putting this  information  in    \t\t\t      March 15, 1991      \t\t\t\t    - 4 -   \t     the  bfSize  field of the BITMAPFILEHEADER. \t 4.  Calculating the offset to the image data from the\tstart  of  the \t     file,   and   putting  this  in  the   bfOffBits \tfield  of  the \t     BITMAPFILEHEADER. \t 5.  Writing to the file the BITMAPFILEHEADER,\tthe  BITMAPINFOHEADER, \t     the color palette, and the image data (in that order).      The following sections describe structures in terms of MicroSoft  C\t type-     defined  keywords.\tThe following table describes these keywords for those     not familiar with MicroSoft C.  \t\t     _______________________________________ \t\t    |\t\t\t\t\t   | \t\t    | Type-defined keywords in MicroSoft C.| \t\t    |______________________________________| \t\t    | typedef |\t meaning\t\t   | \t\t    |_________|____________________________| \t\t    | BYTE    |\t unsigned character\t   | \t\t    | WORD    |\t two byte unsigned integer | \t\t    | DWORD   |\t four byte unsigned integer| \t\t    |_________|____________________________|                                 \t\t\t      March 15, 1991      \t\t\t\t    - 5 -       THE BITMAPFILEHEADER      This structure is defined in  windows.h  as: \t typedef struct tagBITMAPFILEHEADER { \t\t WORD\t bfType; \t\t DWORD\t bfSize; \t\t WORD\t bfReserved1; \t\t WORD\t bfReserved2; \t\t DWORD\t bfOffBits; \t } BITMAPFILEHEADER;      The  bfType  field is the two ascii characters \'B\' and \'M\'.\t  This\tserves     to\tidentify  the  file  as\t a  DIB\t image file.  On an intel byte ordered     machine (IBM or a compatible), this constant can be formed\tin  C  as  the     quantity (\'M\'  \t\t\tSenior, Department of Infomation Science, \t\t\tFaculty of Science, University of Tokyo, JAPAN. 