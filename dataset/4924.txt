From: defaria@cup.hp.com (Andy DeFaria) Subject: Mysterious beeping  [ Article crossposted from hp.windows ] [ Author was Andy DeFaria ] [ Posted on Mon, 19 Apr 1993 18:08:38 GMT ]  For some reason the following code causes my X application to beep whenever I intercept a keystroke and change it is meaning.  The intent of this code it to allow  date  fields the following special keys:  \t[Tt]:\tInsert today is date \t[+=]:\tBump day up by one \t[-_]:\tBump day down by one  I hardcoded some dates for this example.  Perhaps I should not be using an XmText field for this.  //////////////////////////////////////////////////////////////////////////////  //  // For some reason the following code beeps whenever any of the special keys // of [Tt+=-_] are hit.  Why?  The idea of this code is to interpret these // keys having the special meaning implied by the code.  I would like to get // rid of the beeping but, as far as I can tell, i am not doing the beep and  // am at a lose as to understanding who and why the beeping is occuring. //  //////////////////////////////////////////////////////////////////////////////                  Widget\t\ttoplevel; Widget\t\tmainWindow; Widget\t\tmainPane; Widget\t\tdateField; XtAppContext\tapplication;   void markToday (Widget date) {    char *todaysDate =  04/19/93 ;    XtVaSetValues (date, XmNvalue, todaysDate, NULL); } // markToday  void markTomorrow (Widget date) {    char *tomorrowsDate =  04/20/93 ;    XtVaSetValues (date, XmNvalue, tomorrowsDate, NULL); } // markTomorrow  void markYesterday (Widget date) {    char *yesterdaysDate =  04/18/93 ;    XtVaSetValues (date, XmNvalue, yesterdaysDate, NULL); } // markYesterday  void datekeys (Widget          /* callingWidget */, \t       Widget          date, \t       XmTextVerifyPtr callbackData) {    // Capture the keys [Tt-_+=] can change their behaviour.  If found    // set  doit  to false so X will not interpret the keystroke.     switch (callbackData->text->ptr [0]) {       case \'t\': case \'T\':  \t markToday (date); \t callbackData->doit = FALSE; \t return;       case \'-\': case \'_\': \t markYesterday (date); \t callbackData->doit = FALSE; \t return;       case \'+\': case \'=\': \t markTomorrow (date); \t callbackData->doit = FALSE; \t return;       default: \t return;    } // switch } // datekeys  void main (Cardinal argc, char *argv []) {     // Initialize Xt     toplevel = XtVaAppInitialize (&application,  Application , NULL, 0,  \t\t\t\t &argc, argv, NULL, NULL);      // Create the toolface    mainWindow = XtVaCreateManagedWidget        ( mainWindow , xmMainWindowWidgetClass, toplevel, NULL);     // Create a mainWindow    mainPane = XtVaCreateManagedWidget       ( mainPane , xmRowColumnWidgetClass, mainWindow, NULL);     // Create a small text area    dateField = XtVaCreateManagedWidget       ( dateField , xmTextWidgetClass, mainPane,        XmNtopAttachment,\tXmATTACH_FORM,        XmNrightAttachment,\tXmATTACH_FORM,        XmNcolumns,\t\t8,        NULL);     // Set modifyVerifyCallback to the datekeys callback       XtAddCallback (dateField, XmNmodifyVerifyCallback, \t\t  (XtCallbackProc) datekeys, (XtPointer) dateField);     // Realize the toplevel     XtRealizeWidget (toplevel);     // Go into the XtMainLoop    XtAppMainLoop (application);  } // main   _______________________________________________________________________________ I swear by my life and the love of it that I will    | Andrew DeFaria never live for the sake of another man nor ask       | Hewlett Packard another man to live for mine.                        | California Language Labs                     John Galt                        | defaria@cup.hp.com _______________________________________________________________________________   -- _______________________________________________________________________________ I swear by my life and the love of it that I will    | Andrew DeFaria never live for the sake of another man nor ask       | Hewlett Packard another man to live for mine.                        | California Language Labs                     John Galt                        | defaria@cup.hp.com _______________________________________________________________________________ 