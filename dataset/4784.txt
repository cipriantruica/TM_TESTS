From: daniels@NeoSoft.com (Brad Daniels) Subject: Re: C++ toolkit  directions  ?  In article  devil@loki.HellNet.org (Gil Tene) writes: >I am trying to figure out the current C++ toolkit  directions . >More simply, i had like to know which C++ toolkit to  bet on   >for use in a new long term project.  I have the same problem.  I have looked at Motif++, WWL, InterViews, GINA++, and a few variations on the above.  i have also done a cursory examination of Rogue Wave is View.h++.  I like View.h++ is abstractions best of all of the toolkits I mentioned, but the resulting code looks little like Motif, and I have little confidence that this software will catch on or otherwise result in significant longevity for my code.  GINA++ allows you to write code which looks a great deal like Motif and also makes interesting use of inheritance, but the resulting code is almost too Motif-like, and is certainly not significantly less verbose than equivalent C code.  InterViews looks promising, but I have not found a free version with Motif support, and i am not confident how widely InterViews with Motif support will be adopted, and what (if any) specific Motif support will be available over time.  The other libraries produce code which is less Motif-like, but which does not make sufficient use of the features of C++ to simplify my coding task.  At this point, my inclination is to write my Motif manipulation routines in C, and invoke those routines from my C++ code using simple abstractions suited to my specific task.  Later, if OSF or some credible standards-setting body comes up with a C++ interface to Motif, I will change to that.  It does me no goo to write in C++ if my choice of interfaces leaves me with code which leaves me tied to an abstraction which is not consistent with the industry directions.  it is better to take a standard if inferior solution for now than to go with a slgihtly superior approach which will leave me with both useless code and useless skills a few years from now.  Views.h++ is the only library i had consider right now, but in our environment, we would end up spending nearly $5000 to use it, and I cannot justify it when it is likely to cause short-term productivity decreases as we learn the new abstraction, and is unlikely to be a sufficiently long-lived solution for us to reap the benefits at the high end of the J curve.  - Brad --  Brad Daniels\t\t`\t|   If money cannot buy happiness, daniels@neosoft.com\t\t|   I guess i shall have to rent it.  I do not work for NeoSoft, and\t|\t\t- Weird Al Yenkovic do not speak for my employer.\t| 